{"version":3,"sources":["types/modal.ts","API/api.ts","redux/actions/modal.ts","types/photos.ts","redux/actions/photos.ts","assets/loading.gif","components/Loader/Loader.tsx","assets/location.svg","components/Modal/Modal.tsx","components/FoundPhoto/FoundPhoto.tsx","assets/logo.svg","components/SearchBar/SearchBar.tsx","components/Header/Header.tsx","components/Home/HomeContent.tsx","components/Home/Home.tsx","App.tsx","redux/reducers/modal.ts","redux/reducers/photos.ts","redux/reducers/index.ts","redux/store.ts","index.tsx"],"names":["ModalActionTypes","instance","axios","create","baseURL","headers","Authorization","PhotosActionTypes","setShowModal","photoId","type","SET_SHOW_MODAL","payload","setCloseModal","SET_CLOSE_MODAL","setClear","SET_CLEAR","setPage","page","SET_PAGE","Loader","style","textAlign","src","loader","alt","width","Modal","dispatch","useDispatch","useSelector","modal","photo","isLoading","clickRef","React","useRef","handleOutsideClick","e","current","contains","target","useEffect","document","body","addEventListener","removeEventListener","a","SET_IS_LOADING","get","response","data","SET_PHOTO","console","log","fetchPhoto","className","ref","onClick","fill","xmlns","viewBox","height","d","Object","keys","length","user","profile_image","small","name","urls","regular","alt_description","location","title","marginRight","FoundPhoto","query","useParams","foundPhotos","photos","showModal","foundPhoto","results","SET_FOUND_PHOTOS","fetchPhotosSearch","phrase","toLowerCase","split","map","word","toUpperCase","slice","join","options","fitWidth","margin","id","SearchBar","history","useHistory","handleResults","push","placeholder","value","onChange","SET_QUERY","setQuery","onKeyPress","key","preventDefault","Header","to","logo","HomeContent","fetchMoreData","next","hasMore","dataLength","overflow","listPhotos","Home","randomPhoto","SET_PHOTOS","fetchPhotos","SET_RANDOM_PHOTO","App","exact","path","component","produce","draft","action","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5ce25625.chunk.js","sourcesContent":["export type ModalPhotoTypes = {\r\n  user?: {\r\n    name?: string,\r\n    profile_image?: {\r\n      small: string,\r\n    },\r\n  },\r\n  urls?: {\r\n    regular: string,\r\n  },\r\n  alt_description?: string,\r\n  location?: {\r\n    title: string,\r\n  },\r\n}\r\n\r\nexport type ModalState = {\r\n  photo: ModalPhotoTypes,\r\n  isLoading: boolean,\r\n  showModal: boolean,\r\n  photoId: string\r\n}\r\n\r\nexport enum ModalActionTypes {\r\n  SET_PHOTO = 'MODAL@SET_PHOTO',\r\n  SET_IS_LOADING = 'MODAL@SET_IS_LOADING',\r\n  SET_SHOW_MODAL = 'MODAL@SET_SHOW_MODAL',\r\n  SET_CLOSE_MODAL = 'MODAL@SET_CLOSE_MODAL',\r\n}\r\n\r\ntype setPhoto = {\r\n  type: ModalActionTypes.SET_PHOTO,\r\n  payload: ModalPhotoTypes\r\n}\r\n\r\ntype setIsLoading = {\r\n  type: ModalActionTypes.SET_IS_LOADING\r\n}\r\n\r\ntype setShowModal = {\r\n  type: ModalActionTypes.SET_SHOW_MODAL,\r\n  payload: string\r\n}\r\n\r\ntype setCloseModal = {\r\n  type: ModalActionTypes.SET_CLOSE_MODAL\r\n}\r\n\r\nexport type ModalActionType = setPhoto | setIsLoading | setShowModal | setCloseModal;","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://api.unsplash.com',\r\n  headers: {\r\n    Authorization: 'Client-ID 7320nK4smLMmTDYiZwkX_dyMq6DkQNLCE0t7mH-IKgE',\r\n  },\r\n});\r\n\r\nexport default instance;\r\n","import instance from '../../API/api';\r\nimport {ModalActionType, ModalActionTypes, ModalPhotoTypes} from \"../../types/modal\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nexport const setPhoto = (photo: ModalPhotoTypes): ModalActionType => ({\r\n  type: ModalActionTypes.SET_PHOTO,\r\n  payload: photo,\r\n});\r\n\r\nexport const setIsLoading = (): ModalActionType => ({\r\n  type: ModalActionTypes.SET_IS_LOADING,\r\n});\r\n\r\nexport const setShowModal = (photoId: string): ModalActionType => ({\r\n  type: ModalActionTypes.SET_SHOW_MODAL,\r\n  payload: photoId,\r\n});\r\n\r\nexport const setCloseModal = (): ModalActionType => ({\r\n  type: ModalActionTypes.SET_CLOSE_MODAL,\r\n});\r\n\r\nexport const fetchPhoto = (photoId: string) => async (dispatch: Dispatch<ModalActionType>) => {\r\n  try {\r\n    dispatch(setIsLoading());\r\n    const response = await instance.get(`/photos/${photoId}`);\r\n    dispatch(setPhoto(response.data));\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n","export type RandomPhotoType = {\r\n  id: string,\r\n  alt_description: string,\r\n  urls: {\r\n    regular: string\r\n  },\r\n  user: {\r\n    name: string\r\n  },\r\n}\r\n\r\nexport type PhotosType = {\r\n  id: string,\r\n  urls: {\r\n    small: string,\r\n  },\r\n  alt_description: string,\r\n  user: {\r\n    name: string,\r\n    profile_image: {\r\n      small: string,\r\n    }\r\n  }\r\n}\r\n\r\nexport type PhotosState = {\r\n  photos: PhotosType[],\r\n  randomPhoto: RandomPhotoType[],\r\n  foundPhotos: PhotosType[],\r\n  query: string,\r\n  isLoading: boolean,\r\n  page: number\r\n}\r\n\r\nexport enum PhotosActionTypes {\r\n  SET_PHOTOS = 'PHOTOS@SET_PHOTOS',\r\n  SET_QUERY = 'PHOTOS@SET_QUERY',\r\n  SET_CLEAR = 'PHOTOS@SET_CLEAR',\r\n  SET_IS_LOADING = 'PHOTOS@SET_IS_LOADING',\r\n  SET_RANDOM_PHOTO = 'PHOTOS@SET_RANDOM_PHOTO',\r\n  SET_FOUND_PHOTOS = 'PHOTOS@SET_FOUND_PHOTOS',\r\n  SET_PAGE = 'PHOTOS@SET_PAGE',\r\n}\r\n\r\ntype setPhotos = {\r\n  type: PhotosActionTypes.SET_PHOTOS,\r\n  payload: PhotosType[]\r\n}\r\n\r\ntype setQuery = {\r\n  type: PhotosActionTypes.SET_QUERY,\r\n  payload: string,\r\n}\r\n\r\ntype setClear = {\r\n  type: PhotosActionTypes.SET_CLEAR,\r\n}\r\n\r\ntype setIsLoading = {\r\n  type: PhotosActionTypes.SET_IS_LOADING,\r\n}\r\n\r\ntype setRandomPhoto = {\r\n  type: PhotosActionTypes.SET_RANDOM_PHOTO,\r\n  payload: RandomPhotoType[]\r\n}\r\n\r\ntype setFoundPhotos = {\r\n  type: PhotosActionTypes.SET_FOUND_PHOTOS,\r\n  payload: PhotosType[]\r\n}\r\n\r\ntype setPage = {\r\n  type: PhotosActionTypes.SET_PAGE,\r\n  payload: number\r\n}\r\n\r\nexport type PhotosActionType =\r\n  setPhotos\r\n  | setQuery\r\n  | setClear\r\n  | setIsLoading\r\n  | setRandomPhoto\r\n  | setFoundPhotos\r\n  | setPage;\r\n","import instance from '../../API/api';\r\nimport {PhotosActionType, PhotosActionTypes, PhotosType, RandomPhotoType} from \"../../types/photos\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nexport const setPhotos = (photos: PhotosType[]): PhotosActionType => ({\r\n  type: PhotosActionTypes.SET_PHOTOS,\r\n  payload: photos,\r\n});\r\n\r\nexport const setQuery = (query: string): PhotosActionType => ({\r\n  type: PhotosActionTypes.SET_QUERY,\r\n  payload: query,\r\n});\r\n\r\nexport const setClear = (): PhotosActionType => ({\r\n  type: PhotosActionTypes.SET_CLEAR,\r\n});\r\n\r\nexport const setIsLoading = (): PhotosActionType => ({\r\n  type: PhotosActionTypes.SET_IS_LOADING,\r\n});\r\n\r\nexport const setRandomPhoto = (photo: RandomPhotoType[]): PhotosActionType => ({\r\n  type: PhotosActionTypes.SET_RANDOM_PHOTO,\r\n  payload: photo,\r\n});\r\n\r\nexport const setFoundPhotos = (foundPhoto: any): PhotosActionType => ({\r\n  type: PhotosActionTypes.SET_FOUND_PHOTOS,\r\n  payload: foundPhoto,\r\n});\r\n\r\nexport const setPage = (page: number): PhotosActionType => ({\r\n  type: PhotosActionTypes.SET_PAGE,\r\n  payload: page,\r\n});\r\n\r\nexport const fetchRandomPhoto = () => async (dispatch: Dispatch<PhotosActionType>) => {\r\n  try {\r\n    const response = await instance.get(`/photos/random/?count=1&orientation=landscape`);\r\n    dispatch(setRandomPhoto(response.data))\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n};\r\n\r\nexport const fetchPhotos = (page: number) => async (dispatch: Dispatch<PhotosActionType>) => {\r\n  try {\r\n    dispatch(setPage(page));\r\n    const response = await instance.get(`/photos?page=${page}`);\r\n    dispatch(setPhotos(response.data))\r\n    dispatch(setPage(page + 1));\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nexport const fetchPhotosSearch = (query: string) => async (dispatch: Dispatch<PhotosActionType>) => {\r\n  try {\r\n    dispatch(setIsLoading());\r\n    const response = await instance\r\n      .get(`/search/photos?per_page=30&query=${query}`)\r\n    dispatch(setFoundPhotos(response.data.results))\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n","export default __webpack_public_path__ + \"static/media/loading.196735b1.gif\";","import React from 'react';\r\nimport loader from '../../assets/loading.gif';\r\n\r\nconst Loader: React.FC = () => {\r\n  return (\r\n    <div style={{ textAlign: 'center' }}>\r\n      <img src={loader} alt=\"loading\" width=\"135px\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","export default __webpack_public_path__ + \"static/media/location.72e55ebe.svg\";","import React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport location from '../../assets/location.svg';\r\nimport {fetchPhoto, setCloseModal} from '../../redux/actions/modal';\r\nimport Loader from '../Loader/Loader';\r\nimport './index.scss';\r\nimport {RootState} from \"../../redux/reducers\";\r\n\r\nconst Modal: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const photoId = useSelector(({modal}: RootState) => modal.photoId);\r\n  const photo = useSelector(({modal}: RootState) => modal.photo);\r\n  const isLoading = useSelector(({modal}: RootState) => modal.isLoading);\r\n  const clickRef = React.useRef() as React.MutableRefObject<HTMLDivElement>;\r\n\r\n  const handleOutsideClick = (e: Event) => {\r\n    if (clickRef.current && !clickRef.current.contains(e.target as Node)) {\r\n      dispatch(setCloseModal());\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    document.body.addEventListener('click', handleOutsideClick);\r\n    return () => {\r\n      document.body.removeEventListener('click', handleOutsideClick);\r\n    };\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    dispatch(fetchPhoto(photoId));\r\n  }, [dispatch, photoId]);\r\n\r\n  return (\r\n    <div className=\"modal\">\r\n      <div ref={clickRef} className=\"modal__container\">\r\n        <span className=\"modal__container-button\" onClick={() => dispatch(setCloseModal())}>\r\n          <svg\r\n            fill=\"#000000\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 24 24\"\r\n            width=\"30px\"\r\n            height=\"30px\">\r\n            <path\r\n              d=\"M 4.7070312 3.2929688 L 3.2929688 4.7070312 L 10.585938 12 L 3.2929688 19.292969 L 4.7070312 20.707031 L 12 13.414062 L 19.292969 20.707031 L 20.707031 19.292969 L 13.414062 12 L 20.707031 4.7070312 L 19.292969 3.2929688 L 12 10.585938 L 4.7070312 3.2929688 z\"/>\r\n          </svg>\r\n        </span>\r\n        {isLoading && <Loader/>}\r\n        {Object.keys(photo).length > 0 && (\r\n          <div className=\"modal__content\">\r\n            <div className=\"author__info\">\r\n              <img\r\n                src={photo.user!.profile_image!.small}\r\n                alt={photo.user!.name}\r\n                className=\"author__info-photo\"\r\n              />\r\n              <p className=\"author__info-name\"> {photo.user!.name}</p>\r\n            </div>\r\n            <img\r\n              src={photo.urls!.regular}\r\n              alt={photo.alt_description}\r\n              className=\"modal__content-photo\"\r\n            />\r\n            <p className=\"modal__content-location\">\r\n              {photo.location!.title && (\r\n                <img src={location} alt=\"\" width=\"16px\" style={{marginRight: '5px'}}/>\r\n              )}\r\n              {photo.location!.title}\r\n            </p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\nimport Masonry from 'react-masonry-component';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {useParams} from 'react-router-dom';\r\nimport {setShowModal} from '../../redux/actions/modal';\r\nimport {fetchPhotosSearch} from '../../redux/actions/photos';\r\nimport Loader from '../Loader/Loader';\r\nimport Modal from '../Modal/Modal';\r\nimport './index.scss';\r\nimport {RootState} from \"../../redux/reducers\";\r\n\r\nconst FoundPhoto: React.FC = () => {\r\n  const {query} = useParams<{ query: string }>();\r\n  const dispatch = useDispatch();\r\n  const foundPhotos = useSelector(({photos}: RootState) => photos.foundPhotos);\r\n  const isLoading = useSelector(({photos}: RootState) => photos.isLoading);\r\n  const showModal = useSelector(({modal}: RootState) => modal.showModal);\r\n\r\n  React.useEffect(() => {\r\n    dispatch(fetchPhotosSearch(query));\r\n  }, [dispatch, query]);\r\n\r\n  const titleCase = (phrase: string): string => {\r\n    return phrase\r\n      .toLowerCase()\r\n      .split(' ')\r\n      .map((word) => word[0].toUpperCase() + word.slice(1))\r\n      .join(' ');\r\n  };\r\n\r\n  return isLoading ? (\r\n    <Loader/>\r\n  ) : (\r\n    <>\r\n      {showModal && <Modal/>}\r\n      <div className=\"found\">\r\n        <h1>{titleCase(query)}</h1>\r\n        <Masonry options={{fitWidth: true}} style={{margin: '0 auto'}}>\r\n          {foundPhotos &&\r\n          foundPhotos.map((foundPhoto) => (\r\n            <div\r\n              key={foundPhoto.id}\r\n              className=\"found__item\"\r\n              onClick={() => dispatch(setShowModal(foundPhoto.id))}>\r\n              <img src={foundPhoto.urls.small} alt={foundPhoto.alt_description}/>\r\n              <div className=\"found__item-info\">\r\n                <div className=\"found__item-info-flex\">\r\n                  <div>\r\n                    <img\r\n                      src={foundPhoto.user.profile_image.small}\r\n                      alt={foundPhoto.alt_description}\r\n                    />\r\n                  </div>\r\n                  <p>{foundPhoto.user.name}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </Masonry>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FoundPhoto;\r\n","export default __webpack_public_path__ + \"static/media/logo.4d398d16.svg\";","import React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {setClear, setQuery} from '../../redux/actions/photos';\r\nimport './index.scss';\r\nimport {RootState} from \"../../redux/reducers\";\r\n\r\nconst SearchBar: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const query = useSelector(({photos}: RootState) => photos.query);\r\n  let history = useHistory();\r\n\r\n  const handleOnChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    dispatch(setQuery(e.target.value));\r\n  };\r\n\r\n  const handleResults = (query: string) => {\r\n    history.push(`/${query}`.toLowerCase());\r\n    dispatch(setClear());\r\n  };\r\n\r\n  const handleClick = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (e.key === 'Enter') {\r\n      e.preventDefault();\r\n      handleResults(query);\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className=\"form\">\r\n      <div className=\"form__content\">\r\n        <span onClick={() => handleResults(query)} className=\"search__button\">\r\n          <svg\r\n            fill=\"#000000\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 48 48\"\r\n            width=\"20px\"\r\n            height=\"20px\">\r\n            <path\r\n              d=\"M 20.5 6 C 12.509634 6 6 12.50964 6 20.5 C 6 28.49036 12.509634 35 20.5 35 C 23.956359 35 27.133709 33.779044 29.628906 31.75 L 39.439453 41.560547 A 1.50015 1.50015 0 1 0 41.560547 39.439453 L 31.75 29.628906 C 33.779044 27.133709 35 23.956357 35 20.5 C 35 12.50964 28.490366 6 20.5 6 z M 20.5 9 C 26.869047 9 32 14.130957 32 20.5 C 32 23.602612 30.776198 26.405717 28.791016 28.470703 A 1.50015 1.50015 0 0 0 28.470703 28.791016 C 26.405717 30.776199 23.602614 32 20.5 32 C 14.130953 32 9 26.869043 9 20.5 C 9 14.130957 14.130953 9 20.5 9 z\"/>\r\n          </svg>\r\n        </span>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search free amazing photos\"\r\n          value={query}\r\n          onChange={handleOnChange}\r\n          onKeyPress={handleClick}\r\n        />\r\n        {query ? (\r\n          <span onClick={() => dispatch(setClear())} className=\"cancel__button\">\r\n            <svg\r\n              fill=\"#000000\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              viewBox=\"0 0 24 24\"\r\n              width=\"20px\"\r\n              height=\"20px\">\r\n              <path\r\n                d=\"M 4.7070312 3.2929688 L 3.2929688 4.7070312 L 10.585938 12 L 3.2929688 19.292969 L 4.7070312 20.707031 L 12 13.414062 L 19.292969 20.707031 L 20.707031 19.292969 L 13.414062 12 L 20.707031 4.7070312 L 19.292969 3.2929688 L 12 10.585938 L 4.7070312 3.2929688 z\"/>\r\n            </svg>\r\n          </span>\r\n        ) : null}\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport logo from '../../assets/logo.svg';\r\nimport SearchBar from '../SearchBar/SearchBar';\r\nimport './index.scss';\r\n\r\nconst Header: React.FC = () => {\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"container\">\r\n        <div className=\"header__content\">\r\n          <div className=\"header__left-side\">\r\n            <Link to=\"/\">\r\n              <img src={logo} alt=\"logo\" width=\"85px\" />\r\n            </Link>\r\n            <SearchBar />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport Masonry from 'react-masonry-component';\r\nimport {useDispatch} from 'react-redux';\r\nimport {setShowModal} from '../../redux/actions/modal';\r\nimport Loader from '../Loader/Loader';\r\nimport {PhotosType} from \"../../types/photos\";\r\n\r\ntype HomeContentProps = {\r\n  photos: PhotosType[],\r\n  isLoading: boolean,\r\n  fetchMoreData: (page: number) => void,\r\n  page: number\r\n}\r\n\r\nconst HomeContent: React.FC<HomeContentProps> = ({photos, isLoading, fetchMoreData, page}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <InfiniteScroll\r\n      next={() => fetchMoreData(page)}\r\n      hasMore={true}\r\n      loader={null}\r\n      dataLength={photos.length}\r\n      style={{overflow: 'hidden'}}>\r\n      <Masonry options={{fitWidth: true}} style={{margin: '0 auto'}}>\r\n        {isLoading ? (\r\n          <Loader/>\r\n        ) : (\r\n          photos &&\r\n          photos.map((listPhotos) => (\r\n            <div\r\n              key={listPhotos.id}\r\n              onClick={() => dispatch(setShowModal(listPhotos.id))}\r\n              className=\"home__item\">\r\n              <img src={listPhotos.urls.small} alt={listPhotos.alt_description}/>\r\n              <div className=\"home__item-info\">\r\n                <div className=\"home__item-info-flex\">\r\n                  <div>\r\n                    <img\r\n                      src={listPhotos.user.profile_image.small}\r\n                      alt={listPhotos.alt_description}\r\n                    />\r\n                  </div>\r\n                  <p>{listPhotos.user.name}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))\r\n        )}\r\n      </Masonry>\r\n    </InfiniteScroll>\r\n  );\r\n};\r\n\r\nexport default HomeContent;\r\n","import React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {setShowModal} from '../../redux/actions/modal';\r\nimport {fetchPhotos, fetchRandomPhoto} from '../../redux/actions/photos';\r\nimport Modal from '../Modal/Modal';\r\nimport HomeContent from './HomeContent';\r\nimport './index.scss';\r\nimport {RootState} from \"../../redux/reducers\";\r\n\r\nconst Home: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const photos = useSelector(({photos}: RootState) => photos.photos);\r\n  const randomPhoto = useSelector(({photos}: RootState) => photos.randomPhoto);\r\n  const isLoading = useSelector(({photos}: RootState) => photos.isLoading);\r\n  const page = useSelector(({photos}: RootState) => photos.page);\r\n  const showModal = useSelector(({modal}: RootState) => modal.showModal);\r\n\r\n  const fetchMoreData = (page: number) => {\r\n    dispatch(fetchPhotos(page));\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    dispatch(fetchRandomPhoto());\r\n  }, [dispatch]);\r\n\r\n  React.useEffect(() => {\r\n    fetchMoreData(page);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {showModal && <Modal/>}\r\n      <div className=\"home\">\r\n        <div className=\"home__content\">\r\n          {randomPhoto &&\r\n          randomPhoto.map((photo) => (\r\n            <div key={photo.id} className=\"home__content-item\">\r\n              <img src={photo.urls.regular} alt={photo.alt_description}/>\r\n              <p>\r\n                <span onClick={() => dispatch(setShowModal(photo.id))}>Photo </span>by {' '}\r\n                {photo.user.name}\r\n              </p>\r\n            </div>\r\n          ))}\r\n          <div className=\"home__content-info\">\r\n            <h3 className=\"title\">Square</h3>\r\n            <p className=\"description\">\r\n              Free amazing photos inspired by people all over the world.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <HomeContent photos={photos} isLoading={isLoading} fetchMoreData={fetchMoreData} page={page}/>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport FoundPhoto from './components/FoundPhoto/FoundPhoto';\r\nimport Header from './components/Header/Header';\r\nimport Home from './components/Home/Home';\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header/>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Home}/>\r\n        <Route exact path=\"/:query\" component={FoundPhoto}/>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import {produce} from 'immer';\r\nimport {ModalActionType, ModalActionTypes, ModalState} from \"../../types/modal\";\r\n\r\nconst initialState: ModalState = {\r\n  photo: {},\r\n  isLoading: false,\r\n  showModal: false,\r\n  photoId: '',\r\n};\r\n\r\nconst modal = produce((draft, action: ModalActionType) => {\r\n  switch (action.type) {\r\n    case ModalActionTypes.SET_PHOTO:\r\n      draft.isLoading = false;\r\n      draft.photo = action.payload;\r\n      break;\r\n    case ModalActionTypes.SET_IS_LOADING:\r\n      draft.isLoading = true;\r\n      break;\r\n    case ModalActionTypes.SET_SHOW_MODAL:\r\n      draft.showModal = true;\r\n      draft.photoId = action.payload;\r\n      break;\r\n    case ModalActionTypes.SET_CLOSE_MODAL:\r\n      draft.showModal = false;\r\n      draft.photoId = '';\r\n      draft.photo = {};\r\n      break;\r\n    default:\r\n  }\r\n}, initialState);\r\n\r\nexport default modal;\r\n","import {produce} from 'immer';\r\nimport {PhotosActionType, PhotosActionTypes, PhotosState} from \"../../types/photos\";\r\n\r\nconst initialState: PhotosState = {\r\n  photos: [],\r\n  randomPhoto: [],\r\n  foundPhotos: [],\r\n  query: '',\r\n  isLoading: false,\r\n  page: 1,\r\n};\r\n\r\nconst photos = produce((draft, action: PhotosActionType) => {\r\n  switch (action.type) {\r\n    case PhotosActionTypes.SET_PHOTOS:\r\n      draft.photos.push(...action.payload);\r\n      break;\r\n    case PhotosActionTypes.SET_RANDOM_PHOTO:\r\n      draft.randomPhoto = action.payload;\r\n      break;\r\n    case PhotosActionTypes.SET_FOUND_PHOTOS:\r\n      draft.isLoading = false;\r\n      draft.foundPhotos = action.payload;\r\n      break;\r\n    case PhotosActionTypes.SET_QUERY:\r\n      draft.query = action.payload;\r\n      break;\r\n    case PhotosActionTypes.SET_CLEAR:\r\n      draft.query = '';\r\n      break;\r\n    case PhotosActionTypes.SET_IS_LOADING:\r\n      draft.isLoading = true;\r\n      break;\r\n    case PhotosActionTypes.SET_PAGE:\r\n      draft.page = action.payload;\r\n      break;\r\n    default:\r\n  }\r\n}, initialState);\r\n\r\nexport default photos;\r\n","import {combineReducers} from 'redux';\r\nimport modal from './modal';\r\nimport photos from './photos';\r\n\r\nconst rootReducer = combineReducers({\r\n  photos,\r\n  modal,\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n\r\nexport default rootReducer;\r\n","import {applyMiddleware, compose, createStore} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst composeEnhancers = (window && (window as any)).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\nimport App from './App';\r\nimport './index.scss';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n      <Provider store={store}>\r\n        <App/>\r\n      </Provider>\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}